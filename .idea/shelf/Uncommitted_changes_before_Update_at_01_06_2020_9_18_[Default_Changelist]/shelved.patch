Index: .idea/shelf/Uncommitted_changes_before_Update_at_24_05_2020_20_54__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_24_05_2020_20_54__Default_Changelist_.xml	(revision d5238a2d879d6bf2c288301295011c8195693cad)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_24_05_2020_20_54__Default_Changelist_.xml	(revision d5238a2d879d6bf2c288301295011c8195693cad)
@@ -1,24 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_24_05_2020_20_54_[Default_Changelist]" date="1590344281608" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24_05_2020_20_54_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 24.05.2020 20:54 [Default Changelist]" />
-  <binary>
-    <option name="BEFORE_PATH" value="out/production/DiamondRush/objects/harmless/Harmless.class" />
-    <option name="AFTER_PATH" value="out/production/DiamondRush/objects/harmless/Harmless.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24_05_2020_20_54_[Default_Changelist]/Harmless.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="out/production/DiamondRush/source/PlayPanel$1.class" />
-    <option name="AFTER_PATH" value="out/production/DiamondRush/source/PlayPanel$1.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24_05_2020_20_54_[Default_Changelist]/PlayPanel$1.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="out/production/DiamondRush/objects/traps/Rock$1.class" />
-    <option name="AFTER_PATH" value="out/production/DiamondRush/objects/traps/Rock$1.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24_05_2020_20_54_[Default_Changelist]/Rock$1.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="out/production/DiamondRush/objects/harmless/Tumbleweed.class" />
-    <option name="AFTER_PATH" value="out/production/DiamondRush/objects/harmless/Tumbleweed.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24_05_2020_20_54_[Default_Changelist]/Tumbleweed.class" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_24_05_2020_21_30__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_24_05_2020_21_30__Default_Changelist_.xml	(revision d5238a2d879d6bf2c288301295011c8195693cad)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_24_05_2020_21_30__Default_Changelist_.xml	(revision d5238a2d879d6bf2c288301295011c8195693cad)
@@ -1,64 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_24_05_2020_21_30_[Default_Changelist]" date="1590345021871" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24_05_2020_21_30_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 24.05.2020 21:30 [Default Changelist]" />
-  <binary>
-    <option name="BEFORE_PATH" value="out/production/DiamondRush/objects/traps/Rock.class" />
-    <option name="AFTER_PATH" value="out/production/DiamondRush/objects/traps/Rock.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24_05_2020_21_30_[Default_Changelist]/Rock.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="out/production/DiamondRush/objects/traps/Snake.class" />
-    <option name="AFTER_PATH" value="out/production/DiamondRush/objects/traps/Snake.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24_05_2020_21_30_[Default_Changelist]/Snake.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="out/production/DiamondRush/source/PlayPanel$1.class" />
-    <option name="AFTER_PATH" value="out/production/DiamondRush/source/PlayPanel$1.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24_05_2020_21_30_[Default_Changelist]/PlayPanel$1.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="out/production/DiamondRush/source/PlayPanel.class" />
-    <option name="AFTER_PATH" value="out/production/DiamondRush/source/PlayPanel.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24_05_2020_21_30_[Default_Changelist]/PlayPanel.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="out/production/DiamondRush/objects/traps/FireTrap.class" />
-    <option name="AFTER_PATH" value="out/production/DiamondRush/objects/traps/FireTrap.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24_05_2020_21_30_[Default_Changelist]/FireTrap.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="out/production/DiamondRush/objects/traps/Trap.class" />
-    <option name="AFTER_PATH" value="out/production/DiamondRush/objects/traps/Trap.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24_05_2020_21_30_[Default_Changelist]/Trap.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="out/production/DiamondRush/objects/traps/Scorpion.class" />
-    <option name="AFTER_PATH" value="out/production/DiamondRush/objects/traps/Scorpion.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24_05_2020_21_30_[Default_Changelist]/Scorpion.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="out/production/DiamondRush/objects/harmless/Harmless.class" />
-    <option name="AFTER_PATH" value="out/production/DiamondRush/objects/harmless/Harmless.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24_05_2020_21_30_[Default_Changelist]/Harmless.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="out/production/DiamondRush/objects/traps/Rock$1.class" />
-    <option name="AFTER_PATH" value="out/production/DiamondRush/objects/traps/Rock$1.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24_05_2020_21_30_[Default_Changelist]/Rock$1.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="out/production/DiamondRush/objects/harmless/Diamond.class" />
-    <option name="AFTER_PATH" value="out/production/DiamondRush/objects/harmless/Diamond.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24_05_2020_21_30_[Default_Changelist]/Diamond.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="out/production/DiamondRush/objects/harmless/Tumbleweed.class" />
-    <option name="AFTER_PATH" value="out/production/DiamondRush/objects/harmless/Tumbleweed.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24_05_2020_21_30_[Default_Changelist]/Tumbleweed.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="out/production/DiamondRush/maps/Maps.class" />
-    <option name="AFTER_PATH" value="out/production/DiamondRush/maps/Maps.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24_05_2020_21_30_[Default_Changelist]/Maps.class" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_24_05_2020_21_30_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_24_05_2020_21_30_[Default_Changelist]/shelved.patch	(revision d5238a2d879d6bf2c288301295011c8195693cad)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_24_05_2020_21_30_[Default_Changelist]/shelved.patch	(revision d5238a2d879d6bf2c288301295011c8195693cad)
@@ -1,104 +0,0 @@
-Index: src/source/PlayPanel.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package source;\r\n\r\nimport maps.Cell;\r\nimport maps.Level;\r\nimport maps.Maps;\r\nimport objects.harmless.Diamond;\r\nimport objects.traps.Rock;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.KeyEvent;\r\nimport java.awt.event.KeyListener;\r\n\r\npublic class PlayPanel extends JPanel implements KeyListener {\r\n\r\n    private Boy boy;\r\n    private JPanel panel;\r\n    private Maps maps;\r\n    private boolean stonesAreInited = false;\r\n\r\n    private int mapX;\r\n    private int mapY;\r\n\r\n    private int positionOnScreenX;\r\n    private int positionOnScreenY;\r\n\r\n    private int positionOnMapX;\r\n    private int positionOnMapY;\r\n\r\n\r\n    // map parameters\r\n    int mapWidth;\r\n    int mapHeight;\r\n\r\n    int panelWidth = 700;\r\n    int panelHeight = 700;\r\n\r\n\r\n    private boolean mapMovesToRight;\r\n    private boolean boyMovesToRight;\r\n\r\n    private boolean mapMovesToLeft;\r\n    private boolean boyMovesToLeft;\r\n\r\n    private boolean mapMovesUp;\r\n    private boolean boyMovesUp;\r\n\r\n    private boolean mapMovesDown;\r\n    private boolean boyMovesDown;\r\n\r\n\r\n    private Level currentLevel;\r\n    private Cell[][] levelMatrix;\r\n\r\n\r\n\r\n    public PlayPanel(Boy boy, int currentLevel) {\r\n        panel = this;\r\n        panel.setLayout(null);\r\n        setPreferredSize(new Dimension(2800, 1540));\r\n        this.boy = boy;\r\n        maps = new Maps();\r\n        initLevel(currentLevel);\r\n        calculateInitialValuesOfMap();\r\n    }\r\n\r\n    private void initLevel(int currentLevel) {\r\n        switch (currentLevel){\r\n            case 1:\r\n                this.currentLevel = maps.getLevel1();\r\n                break;\r\n            case 2:\r\n                this.currentLevel = maps.getLevel2();\r\n                break;\r\n            case 3:\r\n                this.currentLevel = maps.getLevel3();\r\n                break;\r\n            case 4:\r\n                this.currentLevel = maps.getLevel4();\r\n                break;\r\n            case 5:\r\n                this.currentLevel = maps.getLevel5();\r\n                break;\r\n        }\r\n        levelMatrix = this.currentLevel.getMatrix();\r\n    }\r\n\r\n    private void calculateInitialValuesOfMap() {\r\n\r\n        mapWidth = currentLevel.getMatrix().length* Values.CELL_SIZE;\r\n        mapHeight = currentLevel.getMatrix()[0].length* Values.CELL_SIZE;\r\n\r\n        positionOnScreenX = currentLevel.getPositionOnScreenX();\r\n        positionOnScreenY = currentLevel.getPositionOnScreenY();\r\n\r\n        positionOnMapX = currentLevel.getPositionOnMapX();\r\n        positionOnMapY = currentLevel.getPositionOnMapY();\r\n        mapX = 0;\r\n        mapY = 0 - ((positionOnMapY  - positionOnScreenY)* Values.CELL_SIZE);\r\n\r\n        boy.x = positionOnScreenX* Values.CELL_SIZE;\r\n        boy.y = positionOnScreenY* Values.CELL_SIZE;\r\n    }\r\n\r\n    @Override\r\n    public void paintComponent(Graphics g) {\r\n        super.paintComponent(g);\r\n        Graphics2D g2 = (Graphics2D) g;\r\n        for (int i = 0; i < levelMatrix.length; i++) {\r\n            for (int j = 0; j < levelMatrix[i].length; j++) {\r\n                levelMatrix[i][j].getBlock().paintObject(g2,mapX+ i*70,mapY+j*70);\r\n            }\r\n        }\r\n        for (int i = 0; i < levelMatrix.length; i++) {\r\n            for (int j = 0; j < levelMatrix[i].length; j++) {\r\n               if (levelMatrix[i][j].getTrapObject() != null) {\r\n                   if (levelMatrix[i][j].getTrapObject() instanceof Rock){\r\n                       if (!stonesAreInited) ((Rock)levelMatrix[i][j].getTrapObject()).initVars(this, i, j, mapX, mapY);\r\n                       if (mapIsMoving()) levelMatrix[i][j].getTrapObject().paintObject(g2, mapX, mapY);\r\n                       else levelMatrix[i][j].getTrapObject().paintObject(g2);\r\n                   }\r\n                   else{\r\n                       JLabel label = levelMatrix[i][j].getTrapObject().getLabel();\r\n                       if (label.getParent() != panel) {\r\n                           Dimension size = label.getPreferredSize();\r\n                           int n = mapX + i * 70;\r\n                           int m = mapY + j * 70;\r\n                           System.out.println(n + \"   \" + m);\r\n                           label.setBounds(mapX + i * 70, mapY + j * 70, size.width, size.height);\r\n                           System.out.println(size.width + \"   \" + size.height);\r\n                           add(label);\r\n                       } else {\r\n                           Dimension size = label.getPreferredSize();\r\n                           label.setBounds(mapX + i * 70, mapY + j * 70, size.width, size.height);\r\n                           //revalidate();\r\n                       }\r\n                   }\r\n               }\r\n               else if (levelMatrix[i][j].getHarmlessObject() != null) {\r\n                    if (levelMatrix[i][j].getHarmlessObject() instanceof Diamond) {\r\n                        if (!stonesAreInited)\r\n                            ((Diamond) levelMatrix[i][j].getHarmlessObject()).initVars(this, i, j, mapX, mapY);\r\n                        if (mapIsMoving()) levelMatrix[i][j].getHarmlessObject().paintObject(g2, mapX, mapY);\r\n                        else levelMatrix[i][j].getHarmlessObject().paintObject(g2);\r\n                    }\r\n               }\r\n            }\r\n        }\r\n        stonesAreInited = true;\r\n        g2.drawImage(boy.currentPicture, boy.x, boy.y, boy.width, boy.height, null);\r\n        //System.out.println(boy.isMoving);\r\n    }\r\n\r\n\r\n    private void setMovementRight() {\r\n        if ((mapX != 0 && boy.x < 350) || (mapX == 0 || mapX == -(mapWidth - panelWidth))) {\r\n            boyMovesToRight = true;\r\n            mapMovesToRight = false;\r\n        }\r\n        if (boy.x == 350 && mapX != -(mapWidth - panelWidth)) {\r\n            boyMovesToRight = false;\r\n            mapMovesToRight = true;\r\n        }\r\n    }\r\n\r\n    private void setMovementLeft() {\r\n        if (mapX == 0 || (boy.x > 280)) {\r\n            mapMovesToLeft = false;\r\n            boyMovesToLeft = true;\r\n        }\r\n        if (boy.x == 280 && mapX != 0) {\r\n            mapMovesToLeft = true;\r\n            boyMovesToLeft = false;\r\n        }\r\n    }\r\n\r\n    private void setMovementUp() {\r\n        if ((mapY == 0) || (mapY != 0 && boy.y > 140)) {\r\n            mapMovesUp = false;\r\n            boyMovesUp = true;\r\n        }\r\n        if (mapY != 0 && boy.y == 140) {\r\n            mapMovesUp = true;\r\n            boyMovesUp = false;\r\n        }\r\n    }\r\n\r\n    private void setMovementDown() {\r\n        if ((mapY == -(mapHeight - panelHeight)) || (mapY != -(mapHeight - panelHeight) && boy.y < 350)) {\r\n            mapMovesDown = false;\r\n            boyMovesDown = true;\r\n        }\r\n        if (mapY != -(mapHeight - panelHeight) && boy.y == 350) {\r\n            mapMovesDown = true;\r\n            boyMovesDown = false;\r\n        }\r\n    }\r\n\r\n\r\n    private void moveMapToRight(){\r\n        mapX -= Values.CELL_SIZE/7;\r\n    }\r\n\r\n    private void moveMapToLeft(){\r\n        mapX += Values.CELL_SIZE/7;\r\n    }\r\n\r\n    private void moveMapUp(){\r\n        mapY += Values.CELL_SIZE/7;\r\n    }\r\n\r\n    private void moveMapDown(){\r\n        mapY -= Values.CELL_SIZE/7;\r\n    }\r\n\r\n\r\n\r\n    private void moveBoy(){\r\n        Timer t = new Timer(100, null);\r\n        t.addActionListener(new AbstractAction() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                if (boy.whatMove == 1 && boyMovesUp) boy.moveUp();\r\n                else if (boy.whatMove == 1 && mapMovesUp) {\r\n                    boy.moveUpAnimation();\r\n                    moveMapUp();\r\n                }\r\n                else if (boy.whatMove == 2 && boyMovesDown) boy.moveDown();\r\n                else if (boy.whatMove == 2 && mapMovesDown) {\r\n                    boy.moveDownAnimation();\r\n                    moveMapDown();\r\n                }\r\n                else if (boy.whatMove == 3 && boyMovesToLeft) boy.moveLeft();\r\n                else if (boy.whatMove == 3 && mapMovesToLeft) {\r\n                    boy.moveLeftAnimation();\r\n                    moveMapToLeft();\r\n                }\r\n                else if (boy.whatMove == 4 && boyMovesToRight) boy.moveRight();\r\n                else if (boy.whatMove == 4 && mapMovesToRight) {\r\n                    boy.moveRightAnimation();\r\n                    moveMapToRight();\r\n                }\r\n                else if (boy.whatMove == 5) boy.shoveLeftAndMove();\r\n                else if (boy.whatMove == 6) boy.shoveLeftAndStand();\r\n                else if (boy.whatMove == 7) boy.shoveRightAndMove();\r\n                else if (boy.whatMove == 8) boy.shoveRightAndStand();\r\n                else if (boy.whatMove == 9) boy.findInChest();\r\n                else if (boy.whatMove == 10) boy.holdARock();\r\n                else if (boy.whatMove == 11) boy.attackUp();\r\n                else if (boy.whatMove == 12) boy.attackDown();\r\n                else if (boy.whatMove == 13) boy.attackLeft();\r\n                else if (boy.whatMove == 14) boy.attackRight();\r\n                else if (boy.whatMove == 15) boy.openWithGoldKeyLeft();\r\n                else if (boy.whatMove == 16) boy.openWithGoldKeyRight();\r\n                else if (boy.whatMove == 17) boy.openWithSilverKeyLeft();\r\n                else if (boy.whatMove == 18) boy.openWithSilverKeyRight();\r\n                repaint();\r\n                if (boy.i == 7){\r\n                    boy.i = 0;\r\n                    boy.isMoving = false;\r\n                    t.stop();\r\n                }\r\n            }\r\n        });\r\n        t.start();\r\n    }\r\n\r\n\r\n    private boolean isAllowedUp(){\r\n        return boy.y != 0;\r\n    }\r\n\r\n    private boolean isAllowedDown(){\r\n        return boy.y != panelHeight- boy.height;\r\n    }\r\n\r\n    private boolean isAllowedRight(){\r\n        return boy.x != panelWidth- boy.width;\r\n    }\r\n\r\n    private boolean isAllowedLeft(){\r\n        return boy.x != 0;\r\n    }\r\n\r\n    private boolean mapIsMoving(){\r\n        return (mapMovesUp || mapMovesDown || mapMovesToLeft || mapMovesToRight);\r\n    }\r\n\r\n\r\n//    private void moveBoy(){\r\n//        Timer t = new Timer(100, null);\r\n//        t.addActionListener(new AbstractAction() {\r\n//            @Override\r\n//            public void actionPerformed(ActionEvent e) {\r\n//                if (boy.whatMove == 1) boy.moveUp();\r\n//                else if (boy.whatMove == 2) boy.moveDown();\r\n//                else if (boy.whatMove == 3) boy.moveLeft();\r\n//                else if (boy.whatMove == 4) boy.moveRight();\r\n//                else if (boy.whatMove == 5) boy.shoveLeftAndMove();\r\n//                else if (boy.whatMove == 6) boy.shoveLeftAndStand();\r\n//                else if (boy.whatMove == 7) boy.shoveRightAndMove();\r\n//                else if (boy.whatMove == 8) boy.shoveRightAndStand();\r\n//                else if (boy.whatMove == 9) boy.findInChest();\r\n//                else if (boy.whatMove == 10) boy.holdAStone();\r\n//                else if (boy.whatMove == 11) boy.attackUp();\r\n//                else if (boy.whatMove == 12) boy.attackDown();\r\n//                else if (boy.whatMove == 13) boy.attackLeft();\r\n//                else if (boy.whatMove == 14) boy.attackRight();\r\n//                else if (boy.whatMove == 15) boy.openWithGoldKeyLeft();\r\n//                else if (boy.whatMove == 16) boy.openWithGoldKeyRight();\r\n//                else if (boy.whatMove == 17) boy.openWithSilverKeyLeft();\r\n//                else if (boy.whatMove == 18) boy.openWithSilverKeyRight();\r\n//                repaint();\r\n//                if (boy.i == 7){\r\n//                    boy.i = 0;\r\n//                    boy.isMoving = false;\r\n//                    t.stop();\r\n//                }\r\n//            }\r\n//        });\r\n//        t.start();\r\n//    }\r\n\r\n    @Override\r\n    public void keyTyped(KeyEvent e) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void keyPressed(KeyEvent e) {\r\n        if ((e.getKeyCode() == KeyEvent.VK_UP) && (boy.isMoving == false) && isAllowedUp()) {\r\n            setMovementUp();\r\n            boy.whatMove = 1;\r\n            boy.isMoving = true;\r\n            moveBoy();\r\n        }\r\n        if ((e.getKeyCode() == KeyEvent.VK_DOWN) && (boy.isMoving == false) && isAllowedDown()) {\r\n            setMovementDown();\r\n            boy.whatMove = 2;\r\n            boy.isMoving = true;\r\n            moveBoy();\r\n        }\r\n        if ((e.getKeyCode() == KeyEvent.VK_LEFT) && (boy.isMoving == false) && isAllowedLeft()) {\r\n            setMovementLeft();\r\n            boy.whatMove = 3;\r\n            //if stone is left boy.whatMove = 5;\r\n            //if wall is left boy.whatMove = 6;\r\n            boy.isMoving = true;\r\n            moveBoy();\r\n        }\r\n        if ((e.getKeyCode() == KeyEvent.VK_RIGHT) && (boy.isMoving == false) && isAllowedRight()) {\r\n            setMovementRight();\r\n            boy.whatMove = 4;\r\n            //if stone is right boy.whatMove = 7;\r\n            //if wall is right boy.whatMove = 8;\r\n            boy.isMoving = true;\r\n            moveBoy();\r\n            Rock rock = (Rock)levelMatrix[4][19].getTrapObject();\r\n            if (rock != null){\r\n                rock.whatMove = 1;\r\n                rock.isMoving = true;\r\n                rock.moveRock();\r\n            }\r\n\r\n        }\r\n        if ((e.getKeyCode() == KeyEvent.VK_SPACE) && (boy.isMoving == false)) {\r\n            if (boy.currentPicture == boy.walkUp2) boy.whatMove = 11;\r\n            else if (boy.currentPicture == boy.standClear) boy.whatMove = 12;\r\n            else if ((boy.currentPicture == boy.standLeft)\r\n                    || (boy.currentPicture == boy.walkLeft6)) boy.whatMove = 13;\r\n            else if ((boy.currentPicture == boy.standRight)\r\n                    || (boy.currentPicture == boy.walkRight6)) boy.whatMove = 14;\r\n            boy.isMoving = true;\r\n            moveBoy();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void keyReleased(KeyEvent e) {\r\n\r\n    }\r\n\r\n    public Level getCurrentLevel() {\r\n        return currentLevel;\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- src/source/PlayPanel.java	(revision f83173c463986606c032e5dd42a403c589be60a5)
-+++ src/source/PlayPanel.java	(date 1590344623087)
-@@ -124,11 +124,7 @@
-                        JLabel label = levelMatrix[i][j].getTrapObject().getLabel();
-                        if (label.getParent() != panel) {
-                            Dimension size = label.getPreferredSize();
--                           int n = mapX + i * 70;
--                           int m = mapY + j * 70;
--                           System.out.println(n + "   " + m);
-                            label.setBounds(mapX + i * 70, mapY + j * 70, size.width, size.height);
--                           System.out.println(size.width + "   " + size.height);
-                            add(label);
-                        } else {
-                            Dimension size = label.getPreferredSize();
-Index: src/scrollVersion/Rock.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package scrollVersion;\r\n\r\nimport objects.traps.Trap;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\n\r\npublic class Rock extends Stone implements Trap {\r\n\r\n    public Rock(){\r\n        whatMove = 0;//Stay calm = 0; stagger = 1;\r\n        // fallLeft = 2; fallRight = 3; fallDown = 4;\r\n        //beShovenLeft = 5; beShovenRight = 6;\r\n        image = new ImageIcon(\"mapImages/rock.png\").getImage();\r\n        i = 0;\r\n        isMoving = false;\r\n    }\r\n\r\n    /*private Cell[][] whatLevel(int level){\r\n        if (level == 1) return maps.getLevel1();\r\n        else if (level == 2) return maps.getLevel2();\r\n        else if (level == 3) return maps.getLevel3();\r\n        else if (level == 4) return maps.getLevel4();\r\n        else if (level == 5) return maps.getLevel5();\r\n        else return new Cell[0][0];\r\n    }*/\r\n\r\n    public void moveRock(){\r\n        Timer timer = new Timer(100, null);\r\n        timer.addActionListener(new AbstractAction() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                if (whatMove == 1) stagger();\r\n                else if (whatMove == 2) fallLeft();\r\n                else if (whatMove == 3) fallRight();\r\n                else if (whatMove == 4) fallDown();\r\n                else if (whatMove == 5) beShovenLeft();\r\n                else if (whatMove == 6) beShovenRight();\r\n                playPanel.repaint();\r\n                if (i == 7){\r\n                    i = 0;\r\n                    if (whatMove == 1) whatMove = 3;\r\n                    else if (whatMove == 3) whatMove = 4;\r\n                    else{\r\n                        isMoving = false;\r\n                        timer.stop();\r\n                    }\r\n                    /*if (whatMove == 1){\r\n                          if (left isClear()) whatMove = 2;\r\n                    *     else if (right isClear()) whatMove = 3;\r\n                    * }\r\n                    * else if (((whatMove == 2)||(whatMove == 3)||(whatMove == 4))&&(down isClear()){\r\n                    *     whatMove = 4;\r\n                    * }\r\n                    * else isMoving = false;\r\n                    * */\r\n                }\r\n            }\r\n        });\r\n        timer.start();\r\n    }\r\n\r\n    public void beShovenLeft(){\r\n        if (i == 3){\r\n            playPanel.getCurrentLevel().getMatrix()[xInArray][yInArray].setTrapObject(null);\r\n            playPanel.getCurrentLevel().getMatrix()[xInArray - 1][yInArray].setTrapObject(Rock.this);\r\n            xInArray -= 1;\r\n        }\r\n        x -= CELL_SIDE / 7;\r\n        i++;\r\n    }\r\n\r\n    public void beShovenRight(){\r\n        if (i == 3){\r\n            playPanel.getCurrentLevel().getMatrix()[xInArray][yInArray].setTrapObject(null);\r\n            playPanel.getCurrentLevel().getMatrix()[xInArray + 1][yInArray].setTrapObject(Rock.this);\r\n            xInArray ++;\r\n        }\r\n        x += CELL_SIDE / 7;\r\n        i++;\r\n    }\r\n\r\n    @Override\r\n    public void paintObject(Graphics2D g2, int mapX, int mapY) {\r\n        g2.drawImage(image, x, y, WIDTH, HEIGHT,null);\r\n        //System.out.println(mapX + x + \", \" + mapY + y);\r\n    }\r\n\r\n    @Override\r\n    public void paintObject(Graphics2D g2) {\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void setStoneToNewPositionInArray(int xInArray, int yInArray){\r\n        playPanel.getCurrentLevel().getMatrix()[this.xInArray][this.yInArray].setTrapObject(null);\r\n        playPanel.getCurrentLevel().getMatrix()[xInArray][yInArray].setTrapObject(this);\r\n    }\r\n\r\n    @Override\r\n    public void changeState() {\r\n\r\n    }\r\n\r\n    @Override\r\n    public JLabel getLabel() {\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public void interactWithBoy() {\r\n\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- src/scrollVersion/Rock.java	(revision f83173c463986606c032e5dd42a403c589be60a5)
-+++ src/scrollVersion/Rock.java	(date 1590344781630)
-@@ -98,11 +98,6 @@
-         playPanel.getCurrentLevel().getMatrix()[xInArray][yInArray].setTrapObject(this);
-     }
- 
--    @Override
--    public void changeState() {
--
--    }
--
-     @Override
-     public JLabel getLabel() {
-         return null;
-Index: src/objects/traps/FireTrap.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package objects.traps;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\n\r\npublic class FireTrap extends JLabel implements Trap{\r\n\r\n    private Timer timer;\r\n    private boolean[] state = {false,false,false};\r\n    private boolean turningOn = true;\r\n    private JLabel fireTrap;\r\n    private boolean side; //right - true; left - false\r\n\r\n    public FireTrap(boolean side){\r\n        fireTrap = this;\r\n        setPreferredSize(new Dimension(280,70));\r\n        this.side = side;\r\n        timer = new Timer(1000, new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                fireTrap.repaint();\r\n                if(turningOn){\r\n                    for (int i = 0; i < 3; i++) {\r\n                        if(!state[i]){\r\n                            state[i] = true;\r\n                            if(i==2){\r\n                                turningOn=false;\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }else{\r\n                    for (int i = 0; i < 3; i++) {\r\n                        if(state[i]){\r\n                            state[i] = false;\r\n                            if(i==2){\r\n                                turningOn=true;\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        revalidate();\r\n        timer.start();\r\n    }\r\n\r\n    @Override\r\n    public void paint(Graphics g) {\r\n        super.paintComponent(g);\r\n        Graphics2D g2 = (Graphics2D) g;\r\n        g2.setColor(Color.BLACK);\r\n        if(side){ //right\r\n            g2.fillRect(210,0,70,70);\r\n            g2.setColor(Color.RED);\r\n            for (int i = 3; i > 0; i--) {\r\n                if(state[i-1]){\r\n                    g2.fillRect(210-(4-i)*70,0,70,70);\r\n                }\r\n            }\r\n        }else{ //left\r\n            g2.fillRect(0,0,70,70);\r\n            g2.setColor(Color.RED);\r\n            for (int i = 1; i < 4; i++) {\r\n                if(state[i-1]){\r\n                    g2.fillRect(i*70,0,70,70);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        JFrame frame = new JFrame();\r\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        frame.setSize(500,500);\r\n        frame.setVisible(true);\r\n        FireTrap fireTrap = new FireTrap(true);\r\n        frame.add(fireTrap);\r\n        fireTrap.timer.start();\r\n    }\r\n\r\n    @Override\r\n    public void paintObject(Graphics2D g2, int mapX, int mapY) {\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    public JLabel getLabel() {\r\n        return this;\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- src/objects/traps/FireTrap.java	(revision f83173c463986606c032e5dd42a403c589be60a5)
-+++ src/objects/traps/FireTrap.java	(date 1590344716331)
-@@ -87,6 +87,11 @@
- 
-     }
- 
-+    @Override
-+    public void paintObject(Graphics2D g2) {
-+
-+    }
-+
- 
-     @Override
-     public JLabel getLabel() {
-Index: src/objects/traps/Snake.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package objects.traps;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\n\r\npublic class Snake extends JLabel implements Trap{\r\n\r\n    private Timer timer;\r\n    private int x = 0;\r\n    private int y = 0;\r\n    private JLabel snake;\r\n    private boolean side = true; //right - true; left - false\r\n\r\n    public Snake(int width, int height, boolean horizontal){\r\n        snake = this;\r\n        setPreferredSize(new Dimension(width,height));\r\n        if(horizontal) {\r\n            timer = new Timer(10, new ActionListener() {\r\n                @Override\r\n                public void actionPerformed(ActionEvent e) {\r\n                    if (side) {\r\n                        x += 1;\r\n                        if (x+70 >= width) {\r\n                            side = false;\r\n                        }\r\n                    } else {\r\n                        x -= 1;\r\n                        if (x <= 0) {\r\n                            side = true;\r\n                        }\r\n                    }\r\n                    snake.repaint();\r\n                }\r\n            });\r\n        }else{\r\n            timer = new Timer(10, new ActionListener() {\r\n                @Override\r\n                public void actionPerformed(ActionEvent e) {\r\n                    if (side) {\r\n                        y += 1;\r\n                        if (y+70 >= height) {\r\n                            side = false;\r\n                        }\r\n                    } else {\r\n                        y -= 1;\r\n                        if (y <= 0) {\r\n                            side = true;\r\n                        }\r\n                    }\r\n                    snake.repaint();\r\n                }\r\n            });\r\n        }\r\n        revalidate();\r\n        timer.start();\r\n    }\r\n\r\n    @Override\r\n    public void paint(Graphics g) {\r\n        super.paintComponent(g);\r\n        Graphics2D g2 = (Graphics2D) g;\r\n        g2.setColor(Color.GREEN);\r\n        g2.fillRect(x,y,70,70);\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        JFrame frame = new JFrame();\r\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        frame.setSize(500,500);\r\n        frame.setVisible(true);\r\n        Snake snake = new Snake(100,300,true);\r\n        frame.add(snake);\r\n        snake.timer.start();\r\n    }\r\n\r\n    @Override\r\n    public void paintObject(Graphics2D g2, int mapX, int mapY) {\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    public JLabel getLabel() {\r\n        return this;\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- src/objects/traps/Snake.java	(revision f83173c463986606c032e5dd42a403c589be60a5)
-+++ src/objects/traps/Snake.java	(date 1590344716249)
-@@ -80,6 +80,10 @@
- 
-     }
- 
-+    @Override
-+    public void paintObject(Graphics2D g2) {
-+
-+    }
- 
-     @Override
-     public JLabel getLabel() {
-Index: src/objects/traps/Scorpion.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package objects.traps;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\n\r\npublic class Scorpion extends JLabel implements Trap{\r\n\r\n    private Timer timer;\r\n    private int x = 0;\r\n    private int y = 0;\r\n    private JLabel scorpion;\r\n    private boolean hor; // true - horizontal; false - vertical\r\n    private boolean side; //true - right(down); false - left(up)\r\n\r\n    public Scorpion(int width, int height, boolean clockwise){\r\n        scorpion = this;\r\n        setPreferredSize(new Dimension(width,height));\r\n        if(clockwise) {\r\n            hor = true;\r\n            side = true;\r\n            timer = new Timer(10, new ActionListener() {\r\n                @Override\r\n                public void actionPerformed(ActionEvent e) {\r\n                    if(side){\r\n                        if(hor){\r\n                            x+=5;\r\n                            if(x+70>=width){\r\n                                hor = false;\r\n                            }\r\n                        }else{\r\n                            y+=5;\r\n                            if(y+70>=height){\r\n                                hor = true;\r\n                                side = false;\r\n                            }\r\n                        }\r\n                    }else{\r\n                        if(hor){\r\n                            x-=5;\r\n                            if(x<=0){\r\n                                hor = false;\r\n                            }\r\n                        }else{\r\n                            y-=5;\r\n                            if(y<=0){\r\n                                hor = true;\r\n                                side = true;\r\n                            }\r\n                        }\r\n                    }\r\n                    scorpion.repaint();\r\n                }\r\n            });\r\n        }else{\r\n            hor = false;\r\n            side = true;\r\n            timer = new Timer(10, new ActionListener() {\r\n                @Override\r\n                public void actionPerformed(ActionEvent e) {\r\n                    if(side){\r\n                        if(hor){\r\n                            x+=5;\r\n                            if(x+70>=width){\r\n                                hor = false;\r\n                                side = false;\r\n                            }\r\n                        }else{\r\n                            y+=5;\r\n                            if(y+70>=height){\r\n                                hor = true;\r\n                            }\r\n                        }\r\n                    }else{\r\n                        if(hor){\r\n                            x-=5;\r\n                            if(x<=0){\r\n                                hor = false;\r\n                                side = true;\r\n                            }\r\n                        }else{\r\n                            y-=5;\r\n                            if(y<=0){\r\n                                hor = true;\r\n                            }\r\n                        }\r\n                    }\r\n                    scorpion.repaint();\r\n                }\r\n            });\r\n        }\r\n        revalidate();\r\n        timer.start();\r\n    }\r\n\r\n    @Override\r\n    public void paint(Graphics g) {\r\n        super.paintComponent(g);\r\n        Graphics2D g2 = (Graphics2D) g;\r\n        g2.setColor(Color.BLACK);\r\n        g2.fillRect(x,y,70,70);\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        JFrame frame = new JFrame();\r\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        frame.setSize(500,500);\r\n        frame.setVisible(true);\r\n        Scorpion scorpion = new Scorpion(350,350,true);\r\n        frame.add(scorpion);\r\n        scorpion.timer.start();\r\n    }\r\n\r\n    @Override\r\n    public void paintObject(Graphics2D g2, int mapX, int mapY) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public JLabel getLabel() {\r\n        return this;\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- src/objects/traps/Scorpion.java	(revision f83173c463986606c032e5dd42a403c589be60a5)
-+++ src/objects/traps/Scorpion.java	(date 1590344781650)
-@@ -117,6 +117,11 @@
- 
-     }
- 
-+    @Override
-+    public void paintObject(Graphics2D g2) {
-+
-+    }
-+
-     @Override
-     public JLabel getLabel() {
-         return this;
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_24_05_2020_20_54_[Default_Changelist]/shelved.patch .idea/shelf/Uncommitted_changes_before_Update_at_24_05_2020_20_54_[Default_Changelist]/shelved.patch
deleted file mode 100644
