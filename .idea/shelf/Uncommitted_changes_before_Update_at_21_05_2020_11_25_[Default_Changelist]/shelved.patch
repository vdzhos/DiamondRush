Index: src/Game.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.swing.*;\r\n\r\npublic class Game extends JFrame {\r\n\r\n    public Game(){\r\n        setSize(Values.MAIN_WINDOW_WIDTH, Values.MAIN_WINDOW_LENGTH - 20);\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        SwingUtilities.invokeLater(new Runnable() {\r\n            public void run() {\r\n                Game game = new Game();\r\n                JPanel panel = new JPanel();\r\n                Boy boy = new Boy();\r\n                game.addKeyListener(boy);\r\n                boy.start();\r\n                panel.add(boy);\r\n                game.getContentPane().add(panel);\r\n                game.setVisible(true);\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Game.java	(revision e029d06dfe2405a5e0585c73a93aa5426e8534b0)
+++ src/Game.java	(date 1590049295725)
@@ -1,4 +1,5 @@
 import javax.swing.*;
+import java.awt.event.ActionEvent;
 
 public class Game extends JFrame {
 
@@ -6,12 +7,18 @@
         setSize(Values.MAIN_WINDOW_WIDTH, Values.MAIN_WINDOW_LENGTH - 20);
     }
 
-    public static void main(String[] args) {
+    /*public static void main(String[] args) {
         SwingUtilities.invokeLater(new Runnable() {
             public void run() {
                 Game game = new Game();
                 JPanel panel = new JPanel();
-                Boy boy = new Boy();
+                Timer t = new Timer(20, new AbstractAction() {
+                    @Override
+                    public void actionPerformed(ActionEvent e) {
+                        panel.repaint();
+                    }
+                });
+                Boy boy = new Boy(t);
                 game.addKeyListener(boy);
                 boy.start();
                 panel.add(boy);
@@ -19,6 +26,6 @@
                 game.setVisible(true);
             }
         });
-    }
+    }*/
 
 }
Index: src/Boy.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.imageio.ImageIO;\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.awt.event.KeyEvent;\r\nimport java.awt.event.KeyListener;\r\nimport java.awt.geom.Rectangle2D;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\n\r\npublic class Boy extends JComponent implements KeyListener, ActionListener {\r\n\r\n    private Image turnRight;\r\n    private int x;\r\n    private int y;\r\n    private int width;\r\n    private int height;\r\n    private Rectangle rect;\r\n    private int cellSide = Values.CELL_SIZE;\r\n    private Timer timer;\r\n\r\n    public Boy(){\r\n        timer = new Timer(20, this);\r\n        this.x = Values.MAIN_WINDOW_WIDTH / 2;\r\n        this.y = Values.MAIN_WINDOW_LENGTH / 2;\r\n        this.width = x + 50;\r\n        this.height = y + 40;\r\n        String filename = \"boy/walk0.png\";\r\n        try {\r\n            turnRight = ImageIO.read(new File(filename));\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        //setPreferredSize(new Dimension(500, 500));\r\n    }\r\n\r\n    @Override\r\n    public void actionPerformed(ActionEvent e) {\r\n        repaint();\r\n    }\r\n\r\n    @Override\r\n    public void keyTyped(KeyEvent e) { }\r\n\r\n    @Override\r\n    public void keyPressed(KeyEvent e) {\r\n\r\n        if(e.getKeyCode()==KeyEvent.VK_UP){\r\n            moveUp();\r\n        }\r\n        if(e.getKeyCode()==KeyEvent.VK_DOWN){\r\n            moveDown();\r\n        }\r\n        if(e.getKeyCode()==KeyEvent.VK_LEFT){\r\n            moveLeft();\r\n        }\r\n        if(e.getKeyCode()==KeyEvent.VK_RIGHT){\r\n            moveRight();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void keyReleased(KeyEvent e) { }\r\n\r\n    @Override\r\n    protected void paintComponent(Graphics g) {\r\n        Graphics2D g2d = (Graphics2D)g;\r\n        g2d.setColor(Color.blue);\r\n        //g2d.drawRect(x, y, width, height);\r\n        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);\r\n        g2d.scale(0.1, 0.1);\r\n        Rectangle2D re = new Rectangle2D.Double(x, y, width, height);\r\n        g2d.fill(re);\r\n    }\r\n\r\n    private void moveUp() {\r\n        //rect.setBounds(x, y -= cellSide, width, height);\r\n        System.out.println(\"Up\");\r\n        y -= cellSide;\r\n        repaint();\r\n    }\r\n\r\n    private void moveDown() {\r\n        //rect.setBounds(x, y += cellSide, width, height);\r\n        System.out.println(\"Down\");\r\n        y += cellSide;\r\n        repaint();\r\n    }\r\n\r\n    private void moveLeft() {\r\n        //rect.setBounds(x -= cellSide, y, width, height);\r\n        System.out.println(\"Left\");\r\n        x -= cellSide;\r\n        repaint();\r\n    }\r\n\r\n    private void moveRight() {\r\n        //rect.setBounds(x += cellSide, y, width, height);\r\n        System.out.println(\"Right\");\r\n        x += cellSide;\r\n        repaint();\r\n    }\r\n\r\n    public void start() {\r\n        timer.start();\r\n    }\r\n\r\n    public int getX() {\r\n        return x;\r\n    }\r\n\r\n    public void setX(int x) {\r\n        this.x = x;\r\n    }\r\n\r\n    public int getY() {\r\n        return y;\r\n    }\r\n\r\n    public void setY(int y) {\r\n        this.y = y;\r\n    }\r\n\r\n    public int getWidth() {\r\n        return width;\r\n    }\r\n\r\n    public void setWidth(int width) {\r\n        this.width = width;\r\n    }\r\n\r\n    public int getHeight() {\r\n        return height;\r\n    }\r\n\r\n    public void setHeight(int height) {\r\n        this.height = height;\r\n    }\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Boy.java	(revision e029d06dfe2405a5e0585c73a93aa5426e8534b0)
+++ src/Boy.java	(date 1590000531710)
@@ -20,8 +20,8 @@
     private int cellSide = Values.CELL_SIZE;
     private Timer timer;
 
-    public Boy(){
-        timer = new Timer(20, this);
+    public Boy(Timer t){
+        timer = t;
         this.x = Values.MAIN_WINDOW_WIDTH / 2;
         this.y = Values.MAIN_WINDOW_LENGTH / 2;
         this.width = x + 50;
